// Approve signature in Jenkins Script Console
pipeline {
    agent any
    environment {
        URL0 ='https://github.com/Samwalker974/formationjenkins.git'
        CREDENTIALID ='GithubSam'
    }
    parameters {
        string(name: 'BRANCH', defaultValue: 'main', description: 'Choisir la branche à cloner')
        booleanParam(name: 'mineur',description: 'Indique si la version est mineure')
        booleanParam(name: 'majeur',description: 'Indique si la version est majeure')
        booleanParam(name: 'patch',description: 'Indique si la version est un patch')
        booleanParam(name: 'snapshot',description: 'Indique si la version est un snapshot')
        choice(name: 'ENVIRONMENT', choices: ['dev', 'prod'], description: 'Selectionner l\'environnement de déploiement')
    }
    stages {
        stage('Cloner le repertoire') {
            steps {
              //git branch: 'master', url: 'https://github.com/Samwalker974/jenkins.git ', credentialsId: 'Samwalker974'
              checkout([
                $class: 'GitSCM',
                branches: [[name: '*/main']],
                userRemoteConfigs: [[
                    url: env.URL0,
                    credentialsId: env.CREDENTIALID
                ]]
              ])
              echo "Repository cloné avec succès."
              sh "printenv"
            }
        }

        stage('Build Project') {
            steps {
                sh 'chmod +x mvnw'
                sh './mvnw clean package spring-boot:repackage -Dmaven.test.skip=true'
                sh './mvnw ${params.mineur} ${params.majeur} ${params.patch} ${params.snapshot} versions:set'
            }
        }
        stage('Deploy') {
            steps {
                echo "L'environnement de déploiement est : ${params.ENVIRONMENT}"
                script {
                    if (params.ENVIRONMENT == 'dev') {
                        echo 'Déploiement vers l\'environnement de développement...'
                        // Ajouter les étapes spécifiques au déploiement en dev ici
                        sshPublisherDesc(publishers: [sshPublisher(
                            publishers: [sshPublisherDesc(
                                configName: 'training-server',
                                transfers: [sshTransfer(
                                    remoteDirectory: '/tmp',
                                    sourceFiles: 'target/*.jar'
                                )]
                            )],
                        )])                      
                    } else if (params.ENVIRONMENT == 'prod') {
                        echo 'Déploiement vers l\'environnement de production...'
                        // Ajouter les étapes spécifiques au déploiement en prod ici
                    }
                }
            }
        }
    }
}